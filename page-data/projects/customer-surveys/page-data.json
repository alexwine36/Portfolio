{
    "componentChunkName": "component---src-pages-projects-mdx-slug-index-tsx",
    "path": "/projects/customer-surveys/",
    "result": {"data":{"mdx":{"frontmatter":{"tags":["Pulumi","AWS","Step Functions","React"],"title":"Customer Surveys","hero":{"childImageSharp":{"fixed":{"srcSet":"/Portfolio/static/793b780233247c986b7188e24e61f0c0/2244e/lukas-blazek-mcsdtbwxuzu-unsplash.jpg 1x,\n/Portfolio/static/793b780233247c986b7188e24e61f0c0/4fe8c/lukas-blazek-mcsdtbwxuzu-unsplash.jpg 1.5x,\n/Portfolio/static/793b780233247c986b7188e24e61f0c0/14b42/lukas-blazek-mcsdtbwxuzu-unsplash.jpg 2x","src":"/Portfolio/static/793b780233247c986b7188e24e61f0c0/2244e/lukas-blazek-mcsdtbwxuzu-unsplash.jpg"}}}},"tableOfContents":{"items":[{"url":"#the-problem","title":"The Problem"},{"url":"#the-solution","title":"The Solution"},{"url":"#the-process","title":"The Process","items":[{"url":"#restart","title":"Restart","items":[{"url":"#state-machine","title":"State Machine"}]}]}]},"timeToRead":1,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Customer Surveys\",\n  \"date\": \"2022-06-22T00:00:00.000Z\",\n  \"hero\": \"lukas-blazek-mcsdtbwxuzu-unsplash.jpg\",\n  \"tags\": [\"Pulumi\", \"AWS\", \"Step Functions\", \"React\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"the-problem\"\n  }, \"The Problem\"), mdx(\"p\", null, \"Construction is a long process and making sure a customer is happy throughout a build is challenging and the highest priority.\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"the-solution\"\n  }, \"The Solution\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Infrastructure\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Portfolio/skills\"\n  }, \"Pulumi\"), \" to create the backend\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GitLab as the CI/CD environment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NodeJS as the backend\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Frontend\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React for the Dashboard\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Yarn and Turborepo for managing the Monorepo\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mjml for creating email templates\")))), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"the-process\"\n  }, \"The Process\"), mdx(\"p\", null, \"This has been the longest running project. It was initially started in June 2019. Originally created with Serverless and using Razzle and React for a backend. \"), mdx(\"p\", null, \"When COVID hit, the project was paused and we needed to focus on other aspects of the business.\"), mdx(\"h3\", {\n    \"id\": \"restart\"\n  }, \"Restart\"), mdx(\"p\", null, \"With some time away from the project I realized there were many opportunities for improvement.\"), mdx(\"p\", null, \"Initially the project had surveys built in because we wanted custom functionality in the surveys. Later I found out that Typeform has methods for embedding data into forms that would take care of our use case and ease the programming load.\"), mdx(\"p\", null, \"Basic app structure\"), mdx(\"div\", {\n    \"className\": \"mermaid\"\n  }, \"%%{init: {'theme': 'dark'} }%%\\ngraph LR\\n  App --> packages\\n  App --> client\\n  App --> serverless\\n  client --> |Dashboard|survey-dashboard\\n  serverless --> |Pulumi Package|send-surveys\\n  packages --> |Formats Emails|email\"), mdx(\"p\", null, \"Using a monorepo for this project was ideal to share types between projects. The Pulumi package uses Step Functions and a simple Rest API to expose endpoints to the dashboard.\"), mdx(\"h4\", {\n    \"id\": \"state-machine\"\n  }, \"State Machine\"), mdx(\"div\", {\n    \"className\": \"mermaid\"\n  }, \"%%{init: {'theme': 'dark'} }%%\\nstateDiagram-v2\\n[*] --> SurveyBase\\nSurveyBase --> QueryBase\\nQueryBase --> RemapSurveys: $.surveys\\nQueryBase --> Base\\nstate QueryBase {\\n[*] --> Base\\nBase --> HouseSchedule: $.table schedhousedetail\\nBase --> HousemasterSchedule: $.table housemaster\\nHousemasterSchedule --> ValidateAll\\nHouseSchedule --> ValidateAll\\nValidateAll --> [*]\\nValidateAll --> Contacts\\nstate ValidateAll {\\n[*] --> Contacts\\nContacts --> [*]\\n}\\n}\\nRemapSurveys --> InsertSurveys\\nInsertSurveys --> [*]: $.surveys\\nInsertSurveys --> InsertSurvey\\nstate InsertSurveys {\\n[*] --> InsertSurvey\\nInsertSurvey --> [*]\\n}\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"5a21ff47-d5f0-5ce5-98ab-0f28ade763a9","slug":"customer-surveys/","__params":{"slug":"customer-surveys"}}},
    "staticQueryHashes": []}