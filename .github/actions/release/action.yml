name: Release

description: Release packages

inputs:
  github_token:
    description: GitHub token
    required: true
  prerelease:
    description: Prerelease Title
    required: false
    default: 'none'
  # npm_token:
  #   description: NPM token
  #   required: true

runs:
  using: composite
  steps:
    - name: ls
      shell: bash
      run: ls -aFG
    - name: Version
      if: inputs.prerelease == 'none'
      env:
        # NODE_AUTH_TOKEN: ${{ inputs.npm_token }}
        GITHUB_TOKEN: ${{ inputs.github_token }}
      # Use npx instead of yarn because yarn automagically sets NPM_* environment variables
      # like NPM_CONFIG_REGISTRY so npm publish ends up ignoring the .npmrc file
      # which is set up by `setup-node` action.
      shell: bash
      run: yarn release --base=last-release
    - name: PreRelease Version
      if: inputs.prerelease != 'none'
      env:
        # NODE_AUTH_TOKEN: ${{ inputs.npm_token }}
        GITHUB_TOKEN: ${{ inputs.github_token }}
      # Use npx instead of yarn because yarn automagically sets NPM_* environment variables
      # like NPM_CONFIG_REGISTRY so npm publish ends up ignoring the .npmrc file
      # which is set up by `setup-node` action.
      shell: bash
      run: yarn release --base=last-release --releaseAs=prerelease --preid=${{ inputs.prerelease }}

    - name: Tag last-release
      shell: bash
      run: git tag -f last-release

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github_token }}
        branch: ${{ github.ref }}
        force: true
        tags: true
