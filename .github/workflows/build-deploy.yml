name: Build & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: DerYeger/yarn-setup-action@master
        with:
          node-version: 16
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: DerYeger/yarn-setup-action@master
        with:
          node-version: 16
      - name: Run tests
        run: yarn test:ci
      - name: Copy Coverage
        run: cp coverage/apps/web/cobertura-coverage.xml coverage.cobertura.xml
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: coverage.cobertura.xml
          badge: true
          # fail_below_min: true
          format: markdown
          # hide_branch_rate: false
          # hide_complexity: true
          # indicators: true
          output: both
          # thresholds: '60 80'
      - name: Check output
        run: ls -aFG
      - name: Copy Coverage Summary
        run: cp code-coverage-results.md COVERAGE.md
      - name: Upload coverage-summary files
        uses: actions/upload-artifact@v2
        with:
          name: coverage-summary
          path: COVERAGE.md
  docs:
    name: Docs
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - uses: DerYeger/yarn-setup-action@master
        with:
          node-version: 16
      - name: Build Docs
        run: yarn doc:build

      - name: Upload production-ready built doc files
        uses: actions/upload-artifact@v2
        with:
          name: doc-files
          path: ./dist/apps/docs
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: DerYeger/yarn-setup-action@master
        with:
          node-version: 16
      - name: Video Cache
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ./apps/portfolio/.cache
          key: yarn-videos

      - name: Build project
        run: yarn build

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v2
        with:
          name: production-files
          path: ./apps/portfolio/public
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build, docs]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: production-files
          path: build
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: doc-files
          path: build/docs
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
  release:
    name: release
    if: github.ref == 'refs/heads/main'
    needs: [test, deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: DerYeger/yarn-setup-action@master
        with:
          node-version: 16
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-summary
          # path: build
      - run: ls -aFG
      - uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
